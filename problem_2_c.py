# -*- coding: utf-8 -*-
"""problem-2-c.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V5oJU2u1ArvACIQ0lI8e6Z8HjUJbUB1w
"""

import random
from math import pi
import time

def sample_pi(n, seed):
    random.seed(seed)
    s = 0
    for i in range(n):
        x = random.random()
        y = random.random()
        if x**2 + y**2 <= 1.0:
            s += 1
    return s

def compute_pi():
    n_total = int(input("Enter the number of steps in the Monte Carlo simulation: "))
    seed = int(input("Enter the random number generator seed: "))

    # Measure the time for the Monte Carlo simulation
    start_time = time.time()
    s_total = sample_pi(n_total, seed)
    end_time = time.time()
    monte_carlo_time = end_time - start_time

    pi_est = (4.0 * s_total) / n_total

    # Measure the time for printing the results
    start_time = time.time()
    print(" Steps\tSuccess\tPi est.\tError")
    print("%6d\t%7d\t%1.5f\t%1.5f" % (n_total, s_total, pi_est, pi - pi_est))
    end_time = time.time()
    print_time = end_time - start_time

    print(f"Time for Monte Carlo simulation: {monte_carlo_time} seconds")
    print(f"Time for printing results: {print_time} seconds")

if __name__ == "__main__":
    compute_pi()